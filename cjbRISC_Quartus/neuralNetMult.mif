-- Program Memory Initialization File
-- Created by cjbRISC_ASM

WIDTH = 8;
DEPTH = 1024;

ADDRESS_RADIX = HEX;  % Can be HEX, BIN, or DEC %
DATA_RADIX = BIN; % Can be HEX, BIN, or DEC %

CONTENT BEGIN
%      |Op|R|R|      %
%      |Co|s|s|      %
%      |de|d| |      %

0000 : 00010000;  % @start	SUB R0, R0; use R0 for MAeff %
0001 : 00010101;  % SUB R1, R1; initialize the other registers %
0002 : 00011010;  % SUB R2, R2; %
0003 : 00011111;  % SUB R3, R3; %
0004 : 11001100;  % ST	R3, M[R0, 0x53]; %
0005 : 01010011;
0006 : 00100110;  % INC R1, 0x2; R1 = 2 %
0007 : 00000101;  % ADD	R1, R1; R1 = 4 %
0008 : 00000101;  % ADD R1, R1; R1 = 8 %
0009 : 11000100;  % ST	R1, M[R0, 0x50]; %
000a : 01010000;
000b : 00101011;  % INC R2, 0x3; R2 = 3 = 0000_0011 %
000c : 10111100;  % LD	R3, M[R0, 0x3FF]; R3 = {PB, SW[3:0]} %
000d : 11111111;
000e : 01011110;  % AND	R3, R2; R2 = {0000_00, SW[1:0]} %
000f : 11001100;  % ST	R3, M[R0, 0x51]; %
0010 : 01010001;
0011 : 00001111;  % ADD	R3, R3; %
0012 : 00001111;  % ADD	R3, R3; %
0013 : 10110100;  % LD	R1, M[R0, 0x51]; %
0014 : 01010001;
0015 : 00001101;  % ADD	R3, R1; R3 = m_val (4-bits) %
0016 : 11001100;  % ST	R3, M[R0, 0x51]; %
0017 : 01010001;
0018 : 00001010;  % ADD R2, R2; R2 = 6 %
0019 : 00001010;  % ADD R2, R2; R2 = 12 = 0000_1100 %
001a : 10111100;  % LD	R3, M[R0, 0x3FF]; R3 = {PB, SW[3:0]} %
001b : 11111111;
001c : 01011110;  % AND	R3, R2; R3 = {0000, SW[1:0], 00} %
001d : 11001100;  % ST	R3, M[R0, 0x52]; %
001e : 01010010;
001f : 10001110;  % SHRA R3, 0x2; %
0020 : 10110100;  % LD	R1, M[R0, 0x52]; %
0021 : 01010010;
0022 : 00001101;  % ADD	R3, R1; R3 = M_val (4-bits) %
0023 : 11001100;  % ST	R3, M[R0, 0x52]; %
0024 : 01010010;
0025 : 10110100;  % LD	R1, M[R0, 0x52]; %
0026 : 01010010;
0027 : 10111000;  % LD	R2, M[R0, 0x51]; %
0028 : 01010001;
0029 : 00011111;  % @next	SUB R3, R3; %
002a : 00101101;  % INC R3, 0x1; %
002b : 01011110;  % AND R3, R2; %
002c : 11010001;  % JUMP Z, @mbitz; %
002d : 00000110;
002e : 10111100;  % LD	R3, M[R0, 0x53]; %
002f : 01010011;
0030 : 00001101;  % ADD R3, R1; %
0031 : 11001100;  % ST	R3, M[R0, 0x53]; %
0032 : 01010011;
0033 : 00000101;  % @mbitz	ADD	R1, R1; %
0034 : 10001001;  % SHRA R2, 0x1; %
0035 : 10111100;  % LD	R3, M[R0, 0x50]; %
0036 : 01010000;
0037 : 00111101;  % DEC	R3, 0x1; %
0038 : 11010001;  % JUMP Z, @done; %
0039 : 00000101;
003a : 11001100;  % ST	R3, M[R0, 0x50]; %
003b : 01010000;
003c : 11010000;  % JUMP U, @next; %
003d : 11101100;
003e : 10111100;  % @done	LD	R3, M[R0, 0x53]; %
003f : 01010011;
0040 : 11001100;  % ST	R3, M[R0, 0x3FF]; write out to the LEDs %
0041 : 11111111;
0042 : 11010000;  % JUMP U, @start; %
0043 : 10111101;

[0044..03FF] : 00000000; % Fill the remaining locations with 0 %
END;